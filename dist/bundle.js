/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/client/index.ts");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./src/client/components/App/index.ts":
/*!********************************************!*\
  !*** ./src/client/components/App/index.ts ***!
  \********************************************/
/*! exports provided: App */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"App\", function() { return App; });\n/* harmony import */ var perepost_utils_insert_after__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! perepost/utils/insert-after */ \"./src/client/utils/insert-after.ts\");\n/* harmony import */ var perepost_components_ImageWidget_index__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! perepost/components/ImageWidget/index */ \"./src/client/components/ImageWidget/index.ts\");\n\n\nvar App = /** @class */ (function () {\n    function App() {\n        this.els = {\n            editor: document.getElementById(\"editor\"),\n            title: document.getElementById(\"title\"),\n            name: document.getElementById(\"name\"),\n            story: document.getElementById(\"story\"),\n            topControlls: {\n                popup: document.getElementById(\"top-controlls\"),\n                buttons: document.getElementById(\"buttons\"),\n                inputs: document.getElementById(\"inputs\"),\n                head3: document.getElementById(\"head-3\"),\n                head4: document.getElementById(\"head-4\"),\n                blockQuote: document.getElementById(\"blockquote\"),\n                link: document.getElementById(\"link\"),\n                linkInputForm: document.getElementById(\"input-link-form\"),\n                linkInput: document.getElementById(\"link-input\"),\n                linkFormClose: document.getElementById(\"close-link-input\")\n            },\n            sideControlls: {\n                popup: document.getElementById(\"side-controlls\"),\n                image: document.getElementById(\"image\")\n            },\n            publishButton: document.getElementById(\"publish-button\")\n        };\n    }\n    App.prototype.start = function () {\n        this.loadFromLocalstorage();\n        this.bindControlls();\n    };\n    App.prototype.loadFromLocalstorage = function () {\n        var editor = this.els.editor;\n        var draft = localStorage.getItem(\"draft\");\n        if (!draft)\n            return;\n        // editor.innerHTML = draft\n    };\n    App.prototype.saveToLocalstorage = function () {\n        var editor = this.els.editor;\n        var draft = editor.innerHTML;\n        localStorage.setItem(\"draft\", JSON.stringify(draft));\n    };\n    App.prototype.setParagraphNode = function () {\n        this.paragraphNode = null;\n        if (this.selection.rangeCount === 0) {\n            return;\n        }\n        var startContainer = this.selection.getRangeAt(0).startContainer;\n        // if (\n        //   startContainer.nodeName !== \"#text\" &&\n        //   startContainer.matches(\"#story > *\")\n        // )\n        //   this.paragraphNode = startContainer\n        // else {\n        this.paragraphNode = startContainer.parentElement.closest(\"#story > *\");\n        // }\n    };\n    App.prototype.bindControlls = function () {\n        var _this = this;\n        this.els.title.addEventListener(\"input\", function () {\n            _this.els.title.classList.remove(\"invalid\");\n            _this.saveToLocalstorage();\n        });\n        this.els.editor.addEventListener(\"input\", function () {\n            _this.els.editor.classList.remove(\"invalid\");\n            if (_this.els.story.children.length === 0) {\n                var newParagraph = document.createElement(\"p\");\n                newParagraph.classList.add(\"paragraph\");\n                newParagraph.appendChild(document.createTextNode(\"1. \"));\n                // app.els.story.appendChild(newParagraph)\n            }\n            _this.saveToLocalstorage();\n        });\n        this.els.editor.addEventListener(\"input\", function (e) {\n            if (e.type !== \"input\")\n                return;\n            _this.setParagraphNode();\n            if (!_this.paragraphNode)\n                return;\n            var ulRegex = new RegExp(/^[\\-\\*]{1}\\s/);\n            var paragraphText = _this.paragraphNode.textContent.toString();\n            if (ulRegex.test(paragraphText)) {\n            }\n        });\n        this.els.publishButton.addEventListener(\"click\", function () {\n            _this.publish();\n        });\n        this.els.topControlls.head3.addEventListener(\"click\", function () {\n            _this.toggleSeltedNodeTag(\"H3\");\n        });\n        this.els.topControlls.head4.addEventListener(\"click\", function () {\n            _this.toggleSeltedNodeTag(\"H4\");\n        });\n        this.els.topControlls.blockQuote.addEventListener(\"click\", function () {\n            _this.toggleSeltedNodeTag(\"BLOCKQUOTE\");\n        });\n        this.els.topControlls.link.addEventListener(\"click\", function () {\n            if (_this.isSelectionContainsTag(\"A\")) {\n                document.execCommand(\"unlink\");\n            }\n            else {\n                _this.toggleLinkForm();\n            }\n        });\n        this.els.topControlls.linkFormClose.addEventListener(\"click\", function () {\n            _this.toggleLinkForm();\n        });\n        document.addEventListener(\"selectionchange\", this.updateControlls.bind(this));\n        this.els.topControlls.linkInputForm.addEventListener(\"submit\", function (e) {\n            e.preventDefault();\n            var link = _this.els.topControlls.linkInput.value;\n            _this.selection.removeAllRanges();\n            _this.selection.addRange(_this.previousSelectionRange);\n            document.execCommand(\"createLink\", false, link);\n            _this.toggleLinkForm();\n            _this.els.topControlls.linkInput.value = null;\n            _this.updateControllsButtons();\n        });\n        this.els.sideControlls.image.addEventListener(\"click\", function (e) {\n            var imageWidget = Object(perepost_components_ImageWidget_index__WEBPACK_IMPORTED_MODULE_1__[\"ImageWidget\"])();\n            _this.els.story.insertBefore(imageWidget, _this.paragraphNodeTemp);\n            _this.paragraphNodeTemp = null;\n            _this.hideSideControlls();\n        });\n        document.querySelectorAll(\"[contenteditable=true]\").forEach(function (editableEl) {\n            editableEl.addEventListener(\"paste\", function (e) {\n                e.preventDefault();\n                e.stopPropagation();\n                var pasteText = e.clipboardData.getData(\"text\");\n                pasteTextLikeClipboard(pasteText);\n            });\n        });\n        document.addEventListener(\"mousedown\", function (e) {\n            var app = _this;\n            app.isMouseUp = false;\n        });\n        document.addEventListener(\"mouseup\", function (e) {\n            var app = _this;\n            app.isMouseUp = true;\n        });\n        document.addEventListener(\"keyup\", function (e) {\n            switch (e.code) {\n                case \"Space\":\n                    var nodeName = _this.selectionRange.startContainer.nodeName;\n                    if (nodeName === \"#text\") {\n                        var parentNodeName = _this.selectionRange.startContainer.parentNode\n                            .nodeName;\n                        if (parentNodeName !== \"LI\") {\n                            var input = _this.selectionRange.startContainer.textContent.toString();\n                            switch (input) {\n                                case \"1. \":\n                                    document.execCommand(\"insertOrderedList\");\n                                    document\n                                        .getSelection()\n                                        .getRangeAt(0).startContainer.textContent = \"\";\n                                    break;\n                                case \"- \":\n                                    document.execCommand(\"insertUnorderedList\");\n                                    document\n                                        .getSelection()\n                                        .getRangeAt(0).startContainer.textContent = \"\";\n                                    break;\n                                case \"* \":\n                                    document.execCommand(\"insertUnorderedList\");\n                                    document\n                                        .getSelection()\n                                        .getRangeAt(0).startContainer.textContent = \"\";\n                                    break;\n                            }\n                        }\n                    }\n                    break;\n                case \"Enter\":\n                    var selectedNode = (_this.selection.getRangeAt(0).startContainer);\n                    if (selectedNode.nodeName === \"P\" &&\n                        !selectedNode.classList.contains(\"paragraph\") &&\n                        selectedNode.parentNode.nodeName === \"P\") {\n                        selectedNode.classList.add(\"paragraph\");\n                        Object(perepost_utils_insert_after__WEBPACK_IMPORTED_MODULE_0__[\"insertAfter\"])(selectedNode, selectedNode.parentNode);\n                        var newRange = document.createRange();\n                        newRange.setStart(selectedNode, 0);\n                        _this.selection.removeAllRanges();\n                        _this.selection.addRange(newRange);\n                    }\n                    break;\n            }\n        });\n    };\n    App.prototype.publish = function () {\n        var _a = this.els, title = _a.title, story = _a.story, name = _a.name;\n        var errors = this.validate();\n        if (errors.title)\n            title.classList.add(\"invalid\");\n        if (errors.story)\n            story.classList.add(\"invalid\");\n        if (Object.keys(errors).length === 0) {\n            var data = {\n                title: title.textContent,\n                name: name.textContent,\n                story: story.innerHTML\n            };\n            this.postStory(data);\n        }\n        else {\n            console.log(\"not valid\");\n        }\n    };\n    App.prototype.validate = function () {\n        var _a = this.els, title = _a.title, story = _a.story;\n        var errors = {};\n        if (title.textContent === \"\") {\n            errors.title = true;\n        }\n        if (story.textContent.trim() === \"\") {\n            errors.story = true;\n        }\n        return errors;\n    };\n    App.prototype.postStory = function (data) {\n        var newXHR = new XMLHttpRequest();\n        newXHR.addEventListener(\"load\", function () {\n            window.location.replace(this.response);\n        });\n        newXHR.open(\"POST\", \"/\");\n        newXHR.setRequestHeader(\"Content-Type\", \"application/json\");\n        newXHR.send(JSON.stringify(data));\n    };\n    App.prototype.toggleSeltedNodeTag = function (newTag) {\n        if (!this.selectedNode) {\n            return;\n        }\n        var currentTagName = this.paragraphNode.tagName;\n        var newTagName = currentTagName === newTag ? \"P\" : newTag;\n        document.execCommand(\"formatBlock\", false, \"<\" + newTagName + \">\");\n    };\n    App.prototype.isSelectionContainsTag = function (tagName) {\n        var _this = this;\n        var commonAncestor = this.selection.getRangeAt(0).commonAncestorContainer;\n        if (commonAncestor.nodeName === \"#text\" &&\n            commonAncestor.parentElement.tagName === \"A\") {\n            return true;\n        }\n        if (commonAncestor.nodeName === \"#text\")\n            return false;\n        return Array.prototype.slice\n            .call(commonAncestor.childNodes)\n            .some(function (node) {\n            if (node &&\n                _this.selection.containsNode(node, true) &&\n                node.nodeName === tagName)\n                return true;\n        });\n    };\n    App.prototype.toggleLinkForm = function () {\n        var _a = this.els.topControlls, buttons = _a.buttons, inputs = _a.inputs;\n        buttons.classList.toggle(\"hide\");\n        inputs.classList.toggle(\"hide\");\n    };\n    App.prototype.setSelectedNode = function () {\n        // if (document.getSelection()) {\n        //   selectedNode = document.selection.createRange().parentElement()\n        // } else if (app.selection.rangeCount > 0) {\n        //   selectedNode = app.selection.getRangeAt(0).startContainer.parentNode\n        // }\n        this.selectedNode = this.selection.getRangeAt(0).startContainer.parentNode;\n    };\n    App.prototype.updateControlls = function () {\n        this.selection = document.getSelection();\n        this.setParagraphNode();\n        this.setSelectedNode();\n        if (this.selectionRange &&\n            this.selectionRange.startContainer !== this.els.topControlls.linkInputForm) {\n            this.previousSelectionRange = this.selectionRange;\n        }\n        if (this.selection.rangeCount > 0) {\n            this.selectionRange = this.selection.getRangeAt(0);\n        }\n        this.updateControllsVisibility();\n        this.updateSideControllsVisibility();\n        var shouldUpdatePosition = !this.els.topControlls.popup.classList.contains(\"hide\") &&\n            this.selectedNode !== this.els.topControlls.inputs &&\n            this.selection.toString() !== \"\";\n        var shouldUpdateButtons = !this.els.topControlls.popup.classList.contains(\"hide\") &&\n            this.selectedNode !== this.els.topControlls.popup;\n        var shouldUpdateSideControllsPosition = !this.els.sideControlls.popup.classList.contains(\"hide\") &&\n            this.selectedNode !== this.els.sideControlls.image;\n        if (shouldUpdateSideControllsPosition)\n            this.updateSideControllsPosition();\n        if (shouldUpdatePosition)\n            this.updateControllsPosition();\n        if (shouldUpdateButtons)\n            this.updateControllsButtons();\n    };\n    App.prototype.updateControllsVisibility = function () {\n        if (this.selectedNode === this.els.topControlls.inputs) {\n            return;\n        }\n        if (this.selection.toString() === \"\") {\n            return this.hideControlls();\n        }\n        if (!this.paragraphNode) {\n            return this.hideControlls();\n        }\n        this.showControlls();\n    };\n    App.prototype.hideControlls = function () {\n        var _this = this;\n        this.hideControllsTimer = setTimeout(function () {\n            _this.els.topControlls.popup.classList.add(\"hide\");\n        }, 300);\n    };\n    App.prototype.showControlls = function () {\n        if (this.hideControllsTimer) {\n            clearTimeout(this.hideControllsTimer);\n            this.hideControllsTimer = null;\n        }\n        this.els.topControlls.popup.classList.remove(\"hide\");\n    };\n    App.prototype.updateSideControllsVisibility = function () {\n        if (this.selectedNode === this.els.sideControlls.image) {\n            return;\n        }\n        if (!this.paragraphNode || this.paragraphNode.textContent !== \"\") {\n            return this.hideSideControlls();\n        }\n        this.showSideControlls();\n    };\n    App.prototype.showSideControlls = function () {\n        this.els.sideControlls.popup.classList.remove(\"hide\");\n    };\n    App.prototype.hideSideControlls = function () {\n        this.els.sideControlls.popup.classList.add(\"hide\");\n    };\n    App.prototype.updateSideControllsPosition = function () {\n        var rect = this.paragraphNode.getBoundingClientRect();\n        var controllsRect = this.els.sideControlls.popup.getBoundingClientRect();\n        var topOffset = rect.top + window.pageYOffset - controllsRect.height / 4;\n        var leftOffset = rect.left - controllsRect.width - 10;\n        this.paragraphNodeTemp = this.paragraphNode;\n        this.els.sideControlls.popup.style.transform = \"translate(\" + leftOffset + \"px, \" + topOffset + \"px)\";\n    };\n    App.prototype.updateControllsPosition = function () {\n        var rect = this.selectionRange.getBoundingClientRect();\n        var controllsWidth = this.els.topControlls.popup.getBoundingClientRect()\n            .width;\n        var controllsHeight = this.els.topControlls.popup.getBoundingClientRect()\n            .height;\n        var leftOffset = rect.left - controllsWidth / 2 + rect.width / 2;\n        var minimalLeftOffset = 8;\n        if (leftOffset < minimalLeftOffset)\n            leftOffset = minimalLeftOffset;\n        var topOffset = rect.top + window.pageYOffset - controllsHeight - 5;\n        this.els.topControlls.popup.style.transform = \"translate(\" + leftOffset + \"px, \" + topOffset + \"px)\";\n    };\n    App.prototype.updateControllsButtons = function () {\n        var _a = this.els.topControlls, buttons = _a.buttons, head3 = _a.head3, head4 = _a.head4, blockQuote = _a.blockQuote, link = _a.link;\n        var paragraphNode = this.paragraphNode;\n        if (!paragraphNode)\n            return;\n        var paragraphNodeTagName = paragraphNode.tagName;\n        Array.prototype.slice\n            .call(buttons.children)\n            .forEach(function (controll) {\n            controll.classList.remove(\"controll-active\");\n        });\n        switch (paragraphNodeTagName) {\n            case \"H3\":\n                head3.classList.add(\"controll-active\");\n                break;\n            case \"H4\":\n                head4.classList.add(\"controll-active\");\n                break;\n            case \"BLOCKQUOTE\":\n                blockQuote.classList.add(\"controll-active\");\n                break;\n            default:\n                break;\n        }\n        if (this.isSelectionContainsTag(\"A\"))\n            link.classList.add(\"controll-active\");\n    };\n    return App;\n}());\n\n// export const App = {\n//   startApp: function() {\n//     const app = this\n//     document.execCommand(\"defaultParagraphSeparator\", false, \"p\")\n//     app.els = {\n//       editor: document.getElementById(\"editor\"),\n//       title: document.getElementById(\"title\"),\n//       name: document.getElementById(\"name\"),\n//       story: document.getElementById(\"story\"),\n//       topControlls: {\n//         popup: document.getElementById(\"top-controlls\"),\n//         buttons: document.getElementById(\"buttons\"),\n//         inputs: document.getElementById(\"inputs\"),\n//         head3: document.getElementById(\"head-3\"),\n//         head4: document.getElementById(\"head-4\"),\n//         blockQuote: document.getElementById(\"blockquote\"),\n//         link: document.getElementById(\"link\"),\n//         linkInputForm: document.getElementById(\"input-link-form\"),\n//         linkInput: document.getElementById(\"link-input\"),\n//         linkFormClose: document.getElementById(\"close-link-input\")\n//       },\n//       sideControlls: {\n//         popup: document.getElementById(\"side-controlls\"),\n//         image: document.getElementById(\"image\")\n//       },\n//       publishButton: document.getElementById(\"publish-button\")\n//     }\n//     app.loadFromLocalstorage()\n//     app.bindControlls()\n//   },\n//   bindControlls: function() {\n//     const app = this\n//     app.els.title.addEventListener(\"input\", () => {\n//       app.els.title.classList.remove(\"invalid\")\n//       app.saveToLocalstorage()\n//     })\n//     app.els.editor.addEventListener(\"input\", () => {\n//       app.els.editor.classList.remove(\"invalid\")\n//       if (app.els.story.children.length === 0) {\n//         const newParagraph = document.createElement(\"p\")\n//         newParagraph.classList.add(\"paragraph\")\n//         newParagraph.appendChild(document.createTextNode(\"1. \"))\n//         // app.els.story.appendChild(newParagraph)\n//       }\n//       app.saveToLocalstorage()\n//     })\n//     app.els.editor.addEventListener(\"input\", e => {\n//       if (e.inputType !== \"insertText\") return\n//       app.setParagraphNode()\n//       if (!app.paragraph) return\n//       const ulRegex = new RegExp(/^[\\-\\*]{1}\\s/)\n//       const paragraphText = app.paragraph.textContent.toString()\n//       if (ulRegex.test(paragraphText)) {\n//       }\n//     })\n//     app.els.publishButton.addEventListener(\"click\", () => {\n//       app.publish()\n//     })\n//     app.els.topControlls.head3.addEventListener(\"click\", e => {\n//       app.toggleSeltedNodeTag(\"H3\")\n//     })\n//     app.els.topControlls.head4.addEventListener(\"click\", e => {\n//       app.toggleSeltedNodeTag(\"H4\")\n//     })\n//     app.els.topControlls.blockQuote.addEventListener(\"click\", e => {\n//       app.toggleSeltedNodeTag(\"BLOCKQUOTE\")\n//     })\n//     app.els.topControlls.link.addEventListener(\"click\", e => {\n//       if (app.isSelectionContainsTag(\"A\")) {\n//         document.execCommand(\"unlink\")\n//       } else {\n//         app.toggleLinkForm()\n//       }\n//     })\n//     app.els.topControlls.linkFormClose.addEventListener(\"click\", e => {\n//       app.toggleLinkForm()\n//     })\n//     document.addEventListener(\"selectionchange\", app.updateControlls.bind(app))\n//     app.els.topControlls.linkInputForm.addEventListener(\"submit\", e => {\n//       e.preventDefault()\n//       const link = app.els.topControlls.linkInput.value\n//       app.selection.removeAllRanges()\n//       app.selection.addRange(app.previousSelectionRange)\n//       document.execCommand(\"createLink\", false, link)\n//       app.toggleLinkForm()\n//       app.els.topControlls.linkInput.value = null\n//       app.updateControllsButtons()\n//     })\n//     app.els.sideControlls.image.addEventListener(\"click\", e => {\n//       e.preventDefault()\n//       const imageWidget = ImageWidget()\n//       app.els.story.insertBefore(imageWidget, app.paragraphNodeTemp)\n//       app.paragraphNodeTemp = null\n//       app.hideSideControlls()\n//     })\n//     Array.from(document.querySelectorAll(\"[contenteditable=true]\")).forEach(\n//       editableEl => {\n//         editableEl.addEventListener(\"paste\", e => {\n//           e.preventDefault()\n//           e.stopPropagation()\n//           let pasteText = (e.clipboardData || window.clipboardData).getData(\n//             \"text\"\n//           )\n//           pasteTextLikeClipboard(pasteText)\n//         })\n//       }\n//     )\n//     document.addEventListener(\"mousedown\", e => {\n//       const app = this\n//       app.isMouseUp = false\n//     })\n//     document.addEventListener(\"mouseup\", e => {\n//       const app = this\n//       app.isMouseUp = true\n//     })\n//     document.addEventListener(\"keyup\", e => {\n//       switch (e.code) {\n//         case \"Space\":\n//           const nodeName = app.selectionRange.startContainer.nodeName\n//           if (nodeName === \"#text\") {\n//             const parentNodeName =\n//               app.selectionRange.startContainer.parentNode.nodeName\n//             if (parentNodeName !== \"LI\") {\n//               const input = app.selectionRange.startContainer.textContent.toString()\n//               switch (input) {\n//                 case \"1. \":\n//                   document.execCommand(\"insertOrderedList\")\n//                   document\n//                     .getSelection()\n//                     .getRangeAt(0).startContainer.textContent = \"\"\n//                   break\n//                 case \"- \":\n//                   document.execCommand(\"insertUnorderedList\")\n//                   document\n//                     .getSelection()\n//                     .getRangeAt(0).startContainer.textContent = \"\"\n//                   break\n//                 case \"* \":\n//                   document.execCommand(\"insertUnorderedList\")\n//                   document\n//                     .getSelection()\n//                     .getRangeAt(0).startContainer.textContent = \"\"\n//                   break\n//               }\n//             }\n//           }\n//           break\n//         case \"Enter\":\n//           const selectedNode = app.selection.getRangeAt(0).startContainer\n//           if (\n//             selectedNode.tagName === \"P\" &&\n//             !selectedNode.classList.contains(\"paragraph\") &&\n//             selectedNode.parentNode.tagName === \"P\"\n//           ) {\n//             selectedNode.classList.add(\"paragraph\")\n//             insertAfter(selectedNode, selectedNode.parentNode)\n//             const newRange = document.createRange()\n//             newRange.setStart(selectedNode, 0)\n//             app.selection.removeAllRanges()\n//             app.selection.addRange(newRange)\n//           }\n//           break\n//       }\n//     })\n//   },\n//   toggleLinkForm: function() {\n//     const app = this\n//     const { buttons, inputs } = app.els.topControlls\n//     buttons.classList.toggle(\"hide\")\n//     inputs.classList.toggle(\"hide\")\n//   },\n//   updateControlls: function(e) {\n//     const app = this\n//     app.selection = document.getSelection()\n//     app.setParagraphNode()\n//     app.setSelectedNode()\n//     if (\n//       app.selectionRange &&\n//       app.selectionRange.startContainer !== app.els.topControlls.linkInputForm\n//     ) {\n//       app.previousSelectionRange = app.selectionRange\n//     }\n//     if (app.selection.rangeCount > 0) {\n//       app.selectionRange = app.selection.getRangeAt(0)\n//     }\n//     app.updateControllsVisibility()\n//     app.updateSideControllsVisibility()\n//     const shouldUpdatePosition =\n//       !app.els.topControlls.popup.classList.contains(\"hide\") &&\n//       app.selectedNode !== app.els.topControlls.inputs &&\n//       app.selection.toString() !== \"\"\n//     const shouldUpdateButtons =\n//       !app.els.topControlls.popup.classList.contains(\"hide\") &&\n//       app.selectedNode !== app.els.topControlls.popup\n//     const shouldUpdateSideControllsPosition =\n//       !app.els.sideControlls.popup.classList.contains(\"hide\") &&\n//       app.selectedNode !== app.els.sideControlls.image\n//     if (shouldUpdateSideControllsPosition) app.updateSideControllsPosition()\n//     if (shouldUpdatePosition) app.updateControllsPosition()\n//     if (shouldUpdateButtons) app.updateControllsButtons()\n//   },\n//   publish() {\n//     const app = this\n//     const { title, story, name } = app.els\n//     const errors = app.validate()\n//     if (errors.title) title.classList.add(\"invalid\")\n//     if (errors.story) story.classList.add(\"invalid\")\n//     if (Object.keys(errors).length === 0) {\n//       const data = {\n//         title: title.textContent,\n//         name: name.textContent,\n//         story: story.innerHTML\n//       }\n//       app.postStory(data)\n//     } else {\n//       console.log(\"not valid\")\n//     }\n//   },\n//   postStory: function(data) {\n//     const app = this\n//     const newXHR = new XMLHttpRequest()\n//     newXHR.addEventListener(\"load\", function() {\n//       window.location.replace(this.response)\n//     })\n//     newXHR.open(\"POST\", \"/\")\n//     newXHR.setRequestHeader(\"Content-Type\", \"application/json\")\n//     newXHR.send(JSON.stringify(data))\n//   },\n//   setParagraphNode: function() {\n//     const app = this\n//     app.paragraphNode = null\n//     if (app.selection.rangeCount > 0) {\n//       const startContainer = app.selection.getRangeAt(0).startContainer\n//       if (\n//         startContainer.nodeName !== \"#text\" &&\n//         startContainer.matches(\"#story > *\")\n//       )\n//         app.paragraphNode = startContainer\n//       else {\n//         app.paragraphNode = startContainer.parentElement.closest(\"#story > *\")\n//       }\n//     }\n//   },\n//   setSelectedNode: function() {\n//     const app = this\n//     let selectedNode\n//     if (document.selection)\n//       selectedNode = document.selection.createRange().parentElement()\n//     else if (app.selection.rangeCount > 0)\n//       selectedNode = app.selection.getRangeAt(0).startContainer.parentNode\n//     app.selectedNode = selectedNode\n//   },\n//   updateSideControllsPosition: function() {\n//     const app = this\n//     const rect = app.paragraphNode.getBoundingClientRect()\n//     const controllsRect = app.els.sideControlls.popup.getBoundingClientRect()\n//     const topOffset = rect.top + window.pageYOffset - controllsRect.height / 4\n//     const leftOffset = rect.left - controllsRect.width - 10\n//     app.paragraphNodeTemp = app.paragraphNode\n//     app.els.sideControlls.popup.style.transform = `translate(${leftOffset}px, ${topOffset}px)`\n//   },\n//   updateControllsPosition: function() {\n//     const app = this\n//     const rect = app.selectionRange.getBoundingClientRect()\n//     const controllsWidth = app.els.topControlls.popup.getBoundingClientRect()\n//       .width\n//     const controllsHeight = app.els.topControlls.popup.getBoundingClientRect()\n//       .height\n//     let leftOffset = rect.left - controllsWidth / 2 + rect.width / 2\n//     const minimalLeftOffset = 8\n//     if (leftOffset < minimalLeftOffset) leftOffset = minimalLeftOffset\n//     const topOffset = rect.top + window.pageYOffset - controllsHeight - 5\n//     app.els.topControlls.popup.style.transform = `translate(${leftOffset}px, ${topOffset}px)`\n//   },\n//   updateControllsButtons: function() {\n//     const app = this\n//     const { buttons, head3, head4, blockQuote, link } = app.els.topControlls\n//     const { paragraphNode } = app\n//     if (!paragraphNode) return\n//     const paragraphNodeTagName = paragraphNode.tagName\n//     Array.from(buttons.children).forEach(controll => {\n//       controll.classList.remove(\"controll-active\")\n//     })\n//     switch (paragraphNodeTagName) {\n//       case \"H3\":\n//         head3.classList.add(\"controll-active\")\n//         break\n//       case \"H4\":\n//         head4.classList.add(\"controll-active\")\n//         break\n//       case \"BLOCKQUOTE\":\n//         blockQuote.classList.add(\"controll-active\")\n//         break\n//       default:\n//         break\n//     }\n//     if (app.isSelectionContainsTag(\"A\")) link.classList.add(\"controll-active\")\n//   },\n//   updateControllsVisibility: function() {\n//     const app = this\n//     if (app.selectedNode === app.els.topControlls.inputs) {\n//       return\n//     }\n//     if (app.selection.toString() === \"\") {\n//       return app.hideControlls()\n//     }\n//     if (!app.paragraphNode) {\n//       return app.hideControlls()\n//     }\n//     app.showControlls()\n//   },\n//   updateSideControllsVisibility: function() {\n//     const app = this\n//     if (app.selectedNode === app.els.sideControlls.image) {\n//       return\n//     }\n//     if (!app.paragraphNode || app.paragraphNode.textContent !== \"\") {\n//       return app.hideSideControlls()\n//     }\n//     app.showSideControlls()\n//   },\n//   showSideControlls: function() {\n//     const app = this\n//     app.els.sideControlls.popup.classList.remove(\"hide\")\n//   },\n//   hideSideControlls: function() {\n//     const app = this\n//     app.els.sideControlls.popup.classList.add(\"hide\")\n//   },\n//   showControlls: function() {\n//     const app = this\n//     if (app.hideControllsTimer) {\n//       clearTimeout(app.hideControllsTimer)\n//       delete app.hideControllsTimer\n//     }\n//     app.els.topControlls.popup.classList.remove(\"hide\")\n//   },\n//   hideControlls: function() {\n//     const app = this\n//     app.hideControllsTimer = setTimeout(() => {\n//       app.els.topControlls.popup.classList.add(\"hide\")\n//     }, 300)\n//   },\n//   toggleSeltedNodeTag: function(newTag) {\n//     const app = this\n//     if (!app.selectedNode) return\n//     let paragraphNode = app.paragraphNode\n//     const currentTagName = paragraphNode.tagName\n//     const newTagName = currentTagName === newTag ? \"P\" : newTag\n//     document.execCommand(\"formatBlock\", false, `<${newTagName}>`)\n//   },\n//   validate: function() {\n//     const app = this\n//     const { title, story } = app.els\n//     const errors = {}\n//     if (title.textContent === \"\") errors.title = true\n//     if (story.textContent.trim() === \"\") errors.story = true\n//     return errors\n//   },\n//   isSelectionContainsTag: function(tagName) {\n//     const app = this\n//     const commonAncestor = app.selection.getRangeAt(0).commonAncestorContainer\n//     if (\n//       commonAncestor.nodeName === \"#text\" &&\n//       commonAncestor.parentNode.tagName === \"A\"\n//     )\n//       return true\n//     if (commonAncestor.nodeName === \"#text\") return false\n//     return Array.from(commonAncestor.children).some(el => {\n//       if (el && app.selection.containsNode(el, true) && el.tagName === tagName)\n//         return true\n//     })\n//   },\n//   filteredSelectedNodes: function(filterTagName) {\n//     const selection = document.getSelection()\n//     const parent = selection.getRangeAt(0).commonAncestorContainer\n//     if (parent.nodeName === \"#text\") return false\n//     return Array.from(parent.children).filter(el => {\n//       if (\n//         el &&\n//         selection.containsNode(el, true) &&\n//         el.tagName === filterTagName\n//       )\n//         return true\n//     })\n//   },\n//   loadFromLocalstorage: function() {\n//     const app = this\n//     const { editor } = app.els\n//     let draft = localStorage.getItem(\"draft\")\n//     if (!draft) return\n//     // editor.innerHTML = draft\n//   },\n//   saveToLocalstorage: function() {\n//     const app = this\n//     const { editor } = app.els\n//     const draft = editor.innerHTML\n//     localStorage.setItem(\"draft\", JSON.stringify(draft))\n//   }\n// }\nvar pasteTextLikeClipboard = function (text) {\n    document.execCommand(\"insertHTML\", false, text);\n};\n\n\n//# sourceURL=webpack:///./src/client/components/App/index.ts?");

/***/ }),

/***/ "./src/client/components/ImageWidget/index.ts":
/*!****************************************************!*\
  !*** ./src/client/components/ImageWidget/index.ts ***!
  \****************************************************/
/*! exports provided: ImageWidget */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ImageWidget\", function() { return ImageWidget; });\n/* harmony import */ var perepost_utils_create_el__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! perepost/utils/create-el */ \"./src/client/utils/create-el.ts\");\n/* harmony import */ var perepost_utils_reader_results_to_string__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! perepost/utils/reader-results-to-string */ \"./src/client/utils/reader-results-to-string.ts\");\n\n\nvar ImageWidget = function () {\n    var imageWidgetDiv = Object(perepost_utils_create_el__WEBPACK_IMPORTED_MODULE_0__[\"createEl\"])(\"div\", {\n        classList: \"image-widget\",\n        attributes: {\n            contenteditable: false\n        }\n    });\n    var imageWidgetPreview = Object(perepost_utils_create_el__WEBPACK_IMPORTED_MODULE_0__[\"createEl\"])(\"img\", {\n        attributes: {\n            src: \"/image-placeholder.svg\"\n        }\n    });\n    var imageWidgetInput = Object(perepost_utils_create_el__WEBPACK_IMPORTED_MODULE_0__[\"createInputEl\"])({\n        classList: \"hide\",\n        attributes: {\n            type: \"file\",\n            accept: \"image/*\"\n        }\n    });\n    imageWidgetInput.addEventListener(\"change\", function () {\n        if (imageWidgetInput.files && imageWidgetInput.files[0]) {\n            var reader_1 = new FileReader();\n            reader_1.onload = function () {\n                imageWidgetPreview.setAttribute(\"src\", Object(perepost_utils_reader_results_to_string__WEBPACK_IMPORTED_MODULE_1__[\"readerResultToString\"])(reader_1.result));\n                imageWidgetPreview.classList.remove(\"hide\");\n            };\n            reader_1.readAsDataURL(imageWidgetInput.files[0]);\n        }\n    });\n    imageWidgetPreview.addEventListener(\"click\", function (_) {\n        imageWidgetInput.click();\n    });\n    var imageWidgetTitle = Object(perepost_utils_create_el__WEBPACK_IMPORTED_MODULE_0__[\"createEl\"])(\"div\", {\n        classList: \"title\",\n        attributes: {\n            contenteditable: \"true\",\n            placeholder: \"add description or not\"\n        }\n    });\n    var imageWidgetDelete = Object(perepost_utils_create_el__WEBPACK_IMPORTED_MODULE_0__[\"createEl\"])(\"div\", {\n        classList: \"image-widget-delete\",\n        text: \"delete\"\n    });\n    imageWidgetDelete.addEventListener(\"click\", function () {\n        if (confirm(\"Do you want to delete image?\")) {\n            imageWidgetDiv.remove();\n        }\n    });\n    imageWidgetDiv.appendChild(imageWidgetPreview);\n    imageWidgetDiv.appendChild(imageWidgetInput);\n    imageWidgetDiv.appendChild(imageWidgetTitle);\n    imageWidgetDiv.appendChild(imageWidgetDelete);\n    return imageWidgetDiv;\n};\n\n\n//# sourceURL=webpack:///./src/client/components/ImageWidget/index.ts?");

/***/ }),

/***/ "./src/client/index.ts":
/*!*****************************!*\
  !*** ./src/client/index.ts ***!
  \*****************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var perepost_components_App__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! perepost/components/App */ \"./src/client/components/App/index.ts\");\n\ndocument.addEventListener(\"DOMContentLoaded\", function () {\n    var app = new perepost_components_App__WEBPACK_IMPORTED_MODULE_0__[\"App\"]();\n    app.start();\n});\n\n\n//# sourceURL=webpack:///./src/client/index.ts?");

/***/ }),

/***/ "./src/client/utils/create-el.ts":
/*!***************************************!*\
  !*** ./src/client/utils/create-el.ts ***!
  \***************************************/
/*! exports provided: createInputEl, createEl */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createInputEl\", function() { return createInputEl; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createEl\", function() { return createEl; });\nvar __rest = (undefined && undefined.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\n            t[p[i]] = s[p[i]];\n    return t;\n};\nvar assignAttributes = function (el, attributes) {\n    Object.keys(attributes).map(function (attributeName) {\n        el.setAttribute(attributeName, attributes[attributeName]);\n    });\n};\nvar assignClasses = function (el, classList) {\n    if (Array.isArray(classList)) {\n        classList.forEach(function (className) {\n            el.classList.add(className);\n        });\n    }\n    else {\n        el.classList.add(classList);\n    }\n};\nvar createInputEl = function (props) {\n    var classList = props.classList, text = props.text, attributes = __rest(props, [\"classList\", \"text\"]);\n    var inputEl = document.createElement(\"input\");\n    assignAttributes(inputEl, attributes);\n    if (classList) {\n        assignClasses(inputEl, classList);\n    }\n    return inputEl;\n};\nvar createEl = function (tagName, props) {\n    var classList = props.classList, text = props.text, attributes = __rest(props, [\"classList\", \"text\"]);\n    var el = document.createElement(tagName);\n    el.textContent = text;\n    assignAttributes(el, attributes);\n    if (!classList) {\n        assignClasses(el, classList);\n    }\n    return el;\n};\n\n\n//# sourceURL=webpack:///./src/client/utils/create-el.ts?");

/***/ }),

/***/ "./src/client/utils/insert-after.ts":
/*!******************************************!*\
  !*** ./src/client/utils/insert-after.ts ***!
  \******************************************/
/*! exports provided: insertAfter */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"insertAfter\", function() { return insertAfter; });\n// https://learn.javascript.ru/task/insert-after\nvar insertAfter = function (elem, refElem) {\n    var parent = refElem.parentNode;\n    var next = refElem.nextSibling;\n    next ? parent.insertBefore(elem, next) : parent.appendChild(elem);\n};\n\n\n//# sourceURL=webpack:///./src/client/utils/insert-after.ts?");

/***/ }),

/***/ "./src/client/utils/reader-results-to-string.ts":
/*!******************************************************!*\
  !*** ./src/client/utils/reader-results-to-string.ts ***!
  \******************************************************/
/*! exports provided: readerResultToString */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"readerResultToString\", function() { return readerResultToString; });\nvar arrayBufferToString = function (buf) {\n    return String.fromCharCode.apply(null, new Uint16Array(buf));\n};\nvar readerResultToString = function (res) {\n    return typeof res === \"string\" ? res : arrayBufferToString(res);\n};\n\n\n//# sourceURL=webpack:///./src/client/utils/reader-results-to-string.ts?");

/***/ })

/******/ });